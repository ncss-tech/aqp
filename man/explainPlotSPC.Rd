% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sketch-utils.R
\name{explainPlotSPC}
\alias{explainPlotSPC}
\alias{findOverlap}
\alias{fixOverlap}
\title{Visual Explanation for \code{plotSPC}}
\usage{
explainPlotSPC(x, ...)

findOverlap(x, thresh)

fixOverlap(
  x,
  thresh = 0.6,
  adj = 0.2,
  min.x = 0.8,
  max.x = length(x) + 0.2,
  maxIter = 1000,
  trace = FALSE
)
}
\arguments{
\item{x}{vector of horizontal positions}

\item{\dots}{arguments passed to \code{\link{plotSPC}}}

\item{thresh}{horizontal threshold defining "overlap", must be < 1, ideal
values likely in [0.3, 0.8]}

\item{adj}{adjustments are tested within \code{runif(min=adj * -1, max=adj)}}

\item{min.x}{left-side boundary condition}

\item{max.x}{right-side boundary condition}

\item{maxIter}{maximum number of iterations to attempt before giving up and
returning integer sequence}

\item{trace}{print diagnostics}
}
\value{
a list of internally-used ordering vectors and graphical offsets / scaling factors

Attempt to fix overlapping sketches when using relative horizontal spacing.

This is a very simple optimization algorithm for adjusting horizontal sketch
positions until affected profiles are farther apart than a given threshold.
Rank-ordering and boundary conditions are enforced on the adjustments.
Failure to converge within \code{maxIter} results in an integer sequence.

\itemize{
\item \code{findOverlap} a vector of the same length as \code{x}, preserving rank-ordering and boundary conditions.
}
}
\description{
Create a visual explanation for the many arguments to \code{plotSPC}. Call this function instead of \code{plotSPC}, all objects after \code{x} are passed on to \code{plotSPC}. Nearly all of the figures in the \href{https://ncss-tech.github.io/AQP/aqp/aqp-intro.html}{Introduction to SoilProfileCollection Objects tutorial} are created with this function.

This function is actually quite stupid as it can converge on bogus results
scaled adjustments based on deviation from threshold distances would be better
}
\note{
This is a very naive function and may fail to converge on a reasonable
solution. SANN would be a much more robust framework.
}
\examples{

# sample data
data(sp4)
depths(sp4) <- id ~ top + bottom

# proposed vector of relative positions, overlap likely
pos <- c(1, 1.1, 3, 4, 5, 5.2, 7, 8, 9, 10)

# try it
explainPlotSPC(sp4, name='name', relative.pos=pos)

# attempt to fix using an integer sequence, short-circut will prevent adjustments
explainPlotSPC(sp4, name='name', relative.pos=fixOverlap(1:10, trace=TRUE))

# attempt to adjust using defaults
explainPlotSPC(sp4, name='name', relative.pos=fixOverlap(pos, trace=TRUE))

# attempt to adjust and tinker with defaults
explainPlotSPC(sp4, name='name', relative.pos=fixOverlap(pos, adj = 0.2, trace=TRUE))

# repeatable adjustments
set.seed(10101)
explainPlotSPC(sp4, name='name', relative.pos=fixOverlap(pos, thresh = 0.7, trace=TRUE))

# more complex adjustments required
pos <- c(1, 2, 3, 3.3, 5, 5.1, 5.5, 8, 9, 9.1)

# tinker
explainPlotSPC(sp4, name='name', relative.pos=pos)
explainPlotSPC(sp4, name='name', relative.pos=fixOverlap(pos, trace=TRUE))
explainPlotSPC(sp4, name='name', relative.pos=fixOverlap(pos, thresh = 0.7, trace=TRUE))
explainPlotSPC(sp4, name='name', relative.pos=fixOverlap(pos, thres=0.7, adj = 0.2, trace=TRUE))

# no solution possible given these constraints
explainPlotSPC(sp4, name='name', relative.pos=fixOverlap(pos, thres=1, adj = 0.2, trace=TRUE))


}
\seealso{
\code{\link{plotSPC}}
}
\author{
D.E. Beaudette
}
\keyword{manip}
